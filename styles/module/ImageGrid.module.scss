@import "../breakpoints.scss";

/* === Grid styles ========================================================== */
.grid {
  --min-size: 20ch;
  margin: 3em 0;

  display: grid;
  gap: 1rem;

  position: relative;

  @include respond-up("tablet-sm") {
    grid-template-columns: repeat(auto-fit, minmax(var(--min-size), 1fr));
    column-gap: 0.5rem;
    row-gap: 1rem;
  }

  @include respond-up("desktop") {
    column-gap: 1rem;
    row-gap: 2rem;
  }
}

.grid:not(.noScroll):not(.gallery) {
  @include respond-down("mobile") {
    grid-auto-flow: column;
    grid-auto-columns: 75%;
    overflow-x: auto;
  }
}

.grid > div {
  position: absolute;
}

.grid > figure {
  margin: 0;
}

.grid > figure > picture,
.viewOverlay {
  cursor: pointer;
}

.grid > figure > picture {
  transition-property: color, transform;
}

.grid > figure > picture:focus-visible {
  border-color: var(--a500);
  transform: scale(1.025);
  z-index: 1;
}

/* === Gallery mode ========================================================= */
.gallery {
  --thumb-aspect: calc(200% / 3);
  --gl-gap: 0.5em;
  gap: var(--gl-gap);
  grid-auto-flow: row dense;

  @include respond-up("tablet-sm") {
    --gl-gap: 0.5rem;
  }

  @include respond-up("desktop") {
    --gl-gap: 1rem;
  }
}

.gallery > figure.tall {
  grid-row: span 2;
}

.gallery > figure.large {
  grid-row: span 2;
  grid-column: span 2;
}

.gallery > figure > picture {
  position: relative;
  width: 100%;
}

.gallery > figure > picture::before {
  content: '';
  width: 100%;
  padding-bottom: var(--thumb-aspect);
}

.gallery > figure.tall > picture::before {
  padding-bottom: calc(var(--thumb-aspect) * 2 + var(--gl-gap) + 4px);
}

.gallery > figure > picture > img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* === Overlay styles ======================================================= */
.viewOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 100;

  display: grid;
  place-content: center;
  text-align: center;
  padding: var(--padding);

  background-color: var(--bg-o75);
  backdrop-filter: blur(5px);

  cursor: auto;
}

.viewOverlay img {
  --space: calc(var(--text-xl) * 4 + 6em * 2);
  max-height: calc(100vh - var(--space));

  @include respond-up('tablet') {
    --space: calc(var(--text-xl) + 6em * 2);
  }
}

.viewOverlay figcaption {
  font-size: var(--text-base);
  color: var(--text);
}

.pixelated .viewOverlay picture {
  image-rendering: pixelated;
  box-sizing: content-box;
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 1em;

  @include respond-up('tablet') {
    flex-direction: row;
  }
}

.controls button,
.controls a {
  padding: 0;
  margin: 0;

  font-size: var(--text-xl);
  line-height: 1;
  font-weight: 700;
  letter-spacing: 0;
  text-align: left;

  border: none;
  background: none;
  color: var(--text);

  &:disabled {
    color: var(--text-light);
  }

  &:not(:disabled):hover {
    color: var(--a500);
  }

  &:hover {
    background: none;
  }

  &:not(:disabled):focus-visible {
    color: var(--a500);
    outline: 2px solid var(--a500);
  }
}

/* === Transition styles ==================================================== */
.enter,
div.exitActive,
div.exitDone {
  opacity: 0;
}

.exit,
div.enterActive,
div.enterDone {
  opacity: 1;
}

.enterActive,
.enterDone,
.exitActive,
.exitDone {
  transition-property: opacity, backdrop-filter;
  transition-timing-function: ease;
  transition-duration: var(--anim-m);
}
